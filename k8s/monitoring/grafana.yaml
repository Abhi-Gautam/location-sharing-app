apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-provisioning-datasources
  namespace: location-sharing-monitoring
data:
  datasources.yml: |
    apiVersion: 1
    
    datasources:
    - name: Prometheus
      type: prometheus
      access: proxy
      url: http://prometheus:9090
      isDefault: true
      editable: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-provisioning-dashboards
  namespace: location-sharing-monitoring
data:
  dashboards.yml: |
    apiVersion: 1
    
    providers:
    - name: 'default'
      orgId: 1
      folder: ''
      type: file
      disableDeletion: false
      updateIntervalSeconds: 10
      options:
        path: /var/lib/grafana/dashboards
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-backend-comparison
  namespace: location-sharing-monitoring
data:
  backend-comparison.json: |
    {
      "dashboard": {
        "id": null,
        "title": "Backend Performance Comparison",
        "tags": ["location-sharing", "backend", "comparison"],
        "timezone": "browser",
        "panels": [
          {
            "title": "Request Rate (req/s)",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(http_requests_total{job=~\"rust-api|elixir-backend\"}[5m])",
                "legendFormat": "{{job}} - {{method}} {{status}}"
              }
            ],
            "yAxes": [
              {
                "label": "Requests/sec"
              }
            ]
          },
          {
            "title": "Response Time (95th percentile)",
            "type": "graph",
            "targets": [
              {
                "expr": "histogram_quantile(0.95, rate(http_request_duration_seconds_bucket{job=~\"rust-api|elixir-backend\"}[5m]))",
                "legendFormat": "{{job}} - P95"
              }
            ],
            "yAxes": [
              {
                "label": "Seconds"
              }
            ]
          },
          {
            "title": "Memory Usage",
            "type": "graph",
            "targets": [
              {
                "expr": "container_memory_usage_bytes{pod=~\"rust-api.*|elixir-backend.*\"} / 1024 / 1024",
                "legendFormat": "{{pod}}"
              }
            ],
            "yAxes": [
              {
                "label": "MB"
              }
            ]
          },
          {
            "title": "CPU Usage",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(container_cpu_usage_seconds_total{pod=~\"rust-api.*|elixir-backend.*\"}[5m]) * 100",
                "legendFormat": "{{pod}}"
              }
            ],
            "yAxes": [
              {
                "label": "Percent"
              }
            ]
          },
          {
            "title": "WebSocket Connections",
            "type": "graph",
            "targets": [
              {
                "expr": "websocket_connections_total{job=~\"rust-websocket|elixir-backend\"}",
                "legendFormat": "{{job}}"
              }
            ],
            "yAxes": [
              {
                "label": "Connections"
              }
            ]
          },
          {
            "title": "Error Rate",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(http_requests_total{status=~\"5..\",job=~\"rust-api|elixir-backend\"}[5m])",
                "legendFormat": "{{job}} - Errors"
              }
            ],
            "yAxes": [
              {
                "label": "Errors/sec"
              }
            ]
          }
        ],
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "refresh": "5s"
      }
    }
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
  namespace: location-sharing-monitoring
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: location-sharing-monitoring
  labels:
    app: grafana
    component: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
        component: monitoring
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:latest
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: "admin123"
        - name: GF_INSTALL_PLUGINS
          value: "redis-datasource"
        - name: GF_PATHS_PROVISIONING
          value: "/etc/grafana/provisioning"
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
        - name: grafana-provisioning-datasources
          mountPath: /etc/grafana/provisioning/datasources
        - name: grafana-provisioning-dashboards
          mountPath: /etc/grafana/provisioning/dashboards
        - name: grafana-dashboards
          mountPath: /var/lib/grafana/dashboards
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: grafana-storage
        persistentVolumeClaim:
          claimName: grafana-pvc
      - name: grafana-provisioning-datasources
        configMap:
          name: grafana-provisioning-datasources
      - name: grafana-provisioning-dashboards
        configMap:
          name: grafana-provisioning-dashboards
      - name: grafana-dashboards
        configMap:
          name: grafana-dashboard-backend-comparison
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: location-sharing-monitoring
  labels:
    app: grafana
    component: monitoring
spec:
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: grafana
  type: ClusterIP