version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: location_sharing_postgres
    environment:
      POSTGRES_DB: location_sharing
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: dev123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dev -d location_sharing"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - location_sharing_network

  # Redis Cache & Pub/Sub
  redis:
    image: redis:7-alpine
    container_name: location_sharing_redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - location_sharing_network

  # Redis Commander (Redis GUI) - Optional
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: location_sharing_redis_gui
    hostname: redis-commander
    ports:
      - "8082:8081"
    environment:
      REDIS_HOSTS: local:redis:6379
    depends_on:
      - redis
    networks:
      - location_sharing_network
    profiles:
      - tools

  # pgAdmin (PostgreSQL GUI) - Optional
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: location_sharing_pgadmin
    ports:
      - "8083:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - location_sharing_network
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  location_sharing_network:
    driver: bridge